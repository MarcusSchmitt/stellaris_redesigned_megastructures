# see README.txt for example
@initial_build_time = 720
@level_1_build_time = 1800
@level_2_build_time = 1080
@level_3_build_time = 720
@level_4_build_time = 720
@level_5_build_time = 1080

@initial_build_minerals = 1000
@level_1_build_minerals = 1500
@level_2_build_minerals = 1500
@level_3_build_minerals = 2500
@level_4_build_minerals = 2500
@level_5_build_minerals = 3500

@initial_build_energy = 0
@level_1_build_energy = 1000
@level_2_build_energy = 1000
@level_3_build_energy = 500
@level_4_build_energy = 500
@level_5_build_energy = 1500

@initial_energy_maintenance = 5
@level_1_energy_maintenance = 10
@level_2_energy_maintenance = 20
@level_3_energy_maintenance = 35
@level_4_energy_maintenance = 50
@level_5_energy_maintenance = 50

@level_1_mineral_production = 25
@level_2_mineral_production = 50
@level_3_mineral_production = 100
@level_4_mineral_production = 150
@level_5_mineral_production = 250

@level_1_mineral_storage = 1000
@level_2_mineral_storage = 2000
@level_3_mineral_storage = 3000
@level_4_mineral_storage = 4000
@level_5_mineral_storage = 5000

@block_other_construction = no

asteroidhub_0 = {
    entity = "construction_platform_entity"
    construction_entity = "construction_platform_entity"
    portrait = "GFX_megastructure_construction_background"
    place_entity_on_planet_plane = no
    entity_offset = { x = -3 y = -3 }
    build_time = @initial_build_time
    build_cost = {
        minerals = @initial_build_minerals 
        energy = @initial_build_energy
        influence = 150
    }
    construction_blocks_others = @block_other_construction

    potential = {
        has_ascension_perk = ap_voidborn
    }

    maintenance = {
        energy = @initial_energy_maintenance
    }

    possible = {
        custom_tooltip = {
            fail_text = "requires_inside_border"
            is_inside_border = from
        }
    }

    placement_rules = {
        planet_possible = {
            custom_tooltip = {
                fail_text = "requires_no_anomaly"
                NOT = { has_anomaly = yes }
            }
            custom_tooltip = {
                fail_text = "requires_no_existing_megastructure"
                #can_build_megastructure_on_planet = yes
                NOR = {
                    has_planet_flag = megastructure
                    has_planet_flag = has_megastructure
                    solar_system = {
                        has_star_flag = ring_world_built
                    }
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_ringworld_habitable_damaged
                    is_planet_class = pc_ringworld_tech
                    is_planet_class = pc_ringworld_tech_damaged
                    is_planet_class = pc_ringworld_seam
                    is_planet_class = pc_ringworld_seam_damaged
                }
            }
            custom_tooltip = {
                fail_text = "requires_no_orbital_station"
                has_orbital_station = no
            }
            custom_tooltip = {
                fail_text = "requires_survey_not_habitable"
                is_surveyed = {            # prevent leaking habitability information
                    who = prev.from
                    status = yes
                }
                colonizeable_planet = no    # prevent the spaceport colliding with the habitat
            }

             # balance for habitats
            custom_tooltip = {
                fail_text = "requires_asteroid"
               is_asteroid = yes
            }
        } # use these for all non-star megastructures
    }
    
    ai_weight = {
        factor = 5
    }
    
    on_build_start = {}
    on_build_cancel = {}
    
    on_build_complete = {
        set_star_flag = asteroid_mine_built
        fromfrom.planet = {
            set_planet_flag = has_megastructure
            remove_planet = yes
        }
    }
}

asteroidhub_1 = {
    entity = "orbital_habitat_entity"
    construction_entity = "orbital_habitat_entity"
    portrait = "GFX_megastructure_construction_background"
    upgrade_from = {
        asteroidhub_0
    }
    build_time = @level_1_build_time
    build_cost = {
        minerals = @level_1_build_minerals
        energy = @level_1_build_energy
    }
    construction_blocks_others = @block_other_construction
    
    monthly_production = {
        minerals = @level_1_mineral_production
    }
    country_modifier = {
        max_minerals = @level_1_mineral_storage
    }
    maintenance = {
        energy = @level_1_energy_maintenance
    }
    possible = {
        from = { has_ascension_perk = ap_voidborn }
    }
    on_build_start = {}
    on_build_cancel = {}
    on_build_complete = {}
}

asteroidhub_2 = {
    entity = "orbital_habitat_entity"
    construction_entity = "orbital_habitat_entity"
    portrait = "GFX_megastructure_construction_background"
    upgrade_from = {
        asteroidhub_1
    }
    build_time = @level_2_build_time
    build_cost = {
        minerals = @level_2_build_minerals
        energy = @level_2_build_energy
    }
    construction_blocks_others = @block_other_construction
    
    monthly_production = {
        minerals = @level_2_mineral_production
    }
    country_modifier = {
        max_minerals = @level_2_mineral_storage
    }
    maintenance = {
        energy = @level_2_energy_maintenance
    }
    possible = {
        from = { has_ascension_perk = ap_voidborn }
    }
    on_build_start = {}
    on_build_cancel = {}
    on_build_complete = {}
}

asteroidhub_3 = {
    entity = "orbital_habitat_entity"
    construction_entity = "orbital_habitat_entity"
    portrait = "GFX_megastructure_construction_background"
    upgrade_from = {
        asteroidhub_2
    }
    build_time = @level_3_build_time
    build_cost = {
        minerals = @level_3_build_minerals
        energy = @level_3_build_energy
    }
    construction_blocks_others = @block_other_construction
    
    monthly_production = {
        minerals = @level_3_mineral_production
    }
    country_modifier = {
        max_minerals = @level_3_mineral_storage
    }
    maintenance = {
        energy = @level_3_energy_maintenance
    }
    possible = {
        from = { has_ascension_perk = ap_voidborn }
    }
    on_build_start = {}
    on_build_cancel = {}
    on_build_complete = {}
}

asteroidhub_4 = {
    entity = "orbital_habitat_entity"
    construction_entity = "orbital_habitat_entity"
    portrait = "GFX_megastructure_construction_background"
    upgrade_from = {
        asteroidhub_3
    }
    build_time = @level_4_build_time
    build_cost = {
        minerals = @level_4_build_minerals
        energy = @level_4_build_energy
    }
    construction_blocks_others = @block_other_construction
    
    monthly_production = {
        minerals = @level_4_mineral_production
    }
    country_modifier = {
        max_minerals = @level_4_mineral_storage
    }
    maintenance = {
        energy = @level_4_energy_maintenance
    }
    possible = {
        from = { has_ascension_perk = ap_voidborn }
    }
    on_build_start = {}
    on_build_cancel = {}
    on_build_complete = {}
}

asteroidhub_5 = {
    entity = "orbital_habitat_entity"
    construction_entity = "orbital_habitat_entity"
    portrait = "GFX_megastructure_construction_background"
    upgrade_from = {
        asteroidhub_4
    }
    build_time = @level_5_build_time
    build_cost = {
        minerals = @level_5_build_minerals
        energy = @level_5_build_energy
    }
    construction_blocks_others = @block_other_construction
    
    monthly_production = {
        minerals = @level_5_mineral_production
    }
    country_modifier = {
        max_minerals = @level_5_mineral_storage
    }
    maintenance = {
        energy = @level_5_energy_maintenance
    }
    possible = {
        from = { has_ascension_perk = ap_voidborn }
    }
    on_build_start = {}
    on_build_cancel = {}
    on_build_complete = {}
}